semal_struct ::= func(s : structdef mut&) -> v0
{
	puts("semal'ing struct ");
	putss(s->name, s->name_len);
	putchar(10);
};

semal_func ::= func(f : function mut&) -> v0
{
	puts("semal'ing func ");
	putss(f->name, f->name_len);
	putchar(10);
};

semal_macro ::= func(m : macrodef mut&) -> v0
{
	puts("semal'ing macro ");
	putss(m->name, m->name_len);
	putchar(10);
};

semal ::= func(prog : program mut&) -> v0
{
	glob ::= ref(prog->global);
	structs ::= ref(glob->structs);
	funcs ::= ref(glob->funcs);
	macros ::= ref(glob->macros);

	i : u64 mut;
	for(i = 0, i < (structs->size), i = i + 1)
	{
		semal_struct((structs->data) at i);
	}

	for(i = 0, i < (funcs->size), i = i + 1)
	{
		semal_func((funcs->data) at i);
	}

	for(i = 0, i < (macros->size), i = i + 1)
	{
		semal_macro((macros->data) at i);
	}
};

 == build ==
 {
 	add_source_file("program.psy");
 }
