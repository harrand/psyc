cgvtag ::= enum
{
	.misc := 1;
};

cgv ::= struct
{
	tag : cgvtag;
	ll : u64;
	sv : sval;
};

cgv_ty ::= func(v : cgv) -> ty
{
	sv ::= v.sv;
	return sv.type;
};

cgv_has_sv ::= func(v : cgv) -> bool
{
	return sval_hasval(v.sv);
};

cgv_is_null ::= func(v : cgv) -> bool
{
	return sval_isnull(v.sv);
};

cgv_is_zero ::= func(v : cgv) -> bool
{
	return sval_iszero(v.sv);
};

cgv_convert ::= func(v : cgv mut, to : ty) -> cgv
{
	sv ::= ref(v.sv);
	deref(sv) = sval_convert(deref sv, to);
	(v.tag) = (cgvtag.misc);

	return v;
};

== build ==
{
	add_source_file("sval.psy");
}
