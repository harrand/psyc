== build ==
{
	//fooey_glooey();
	add_link_library("Kernel32.lib");
	set_optimization(0);
	set_executable("tmp");
}

GetStdHandle ::= func(handle : u32) -> u64 := extern;
WriteConsoleA ::= func(hConsoleOutput : u64, lpBuffer : u8&, write_count : u32, chars_written : u32 mut& weak, reserved : v0&) -> s32 := extern;

putchar ::= func(chr : u8) -> v0
{
	v ::= chr;
	handle ::= GetStdHandle(4294967285@u32);
	WriteConsoleA(handle, ref v, 1@u32, zero, zero);
};

putuint ::= func(v : u64 weak) -> v0
{
	if(v > 9)
	{
		putuint(v / 10);
	}
	digit ::= v - ((v / 10) * 10);
	putchar('0' + digit);
};

putsint ::= func(v : s64 weak) -> v0
{
	val : s64 mut := v;
	if(v < 0)
	{
		putchar('-');
		val = -val;
	}
	putuint(val);
};

main ::= func() -> s64
{
	putuint(12345678910);
	return 0;
};
