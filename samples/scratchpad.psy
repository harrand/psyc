putchar : (c : i64) -> i64 = extern;
puts : (str : i8*) -> i64 = extern;
default_malloc : (sz : i64) -> i8* = extern;
default_free : (ptr : i8*) -> u0 = extern;

triangle : struct
{
	base : i64;	
	height : i64;

	get_half_perimeter : () -> i64
	{
		puts(__builtin_typename(this));
		return + this->base this->height;
	}
}

main : (argc : i64, argv : i8**) -> i64
{
	shape_ptr : triangle* = default_malloc(__builtin_sizeof(triangle));
	defer default_free(shape_ptr);
	= shape_ptr->base 'A';
	= shape_ptr->height 19;

	puts("the value is: ");
	putchar(shape_ptr->get_half_perimeter());
	return 0;
}

== default : build ==
{
	set_optimisation(0);
	set_output("scratchpad.exe");
	set_linkage("executable");
}

== library : build ==
{
	set_optimisation(0);
	set_output("scratchpad.lib");
	set_output("scratchpad.exe");
}
