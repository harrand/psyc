putchar : (c : i64) -> i64 = extern;

secret : i64 = 68;

main : () -> i64
{
	= secret 100;
	
	harry : gamer;
	= harry.name 'h';
	= harry.age 25;
	= harry.based true;

	connor : gamer;
	= connor.name 'c';
	= connor.age 40;
	= connor.based false;

	will : gamer;
	= will.name 'w';
	= will.age connor.age;
	= will.based true;

	analyse(harry);
	analyse(connor);
	analyse(will);

	//unknown_ints : i64[...];
	ints : i64[5];

	putchar('x');
	putchar(secret);
	return 0;
}

analyse : (someone : gamer) -> u0
{
	putchar('n'); putchar(':'); putchar(' ');
	putchar(someone.name); putchar(' ');

	if(someone.based)
	{
		putchar('x');
	}

	//idx : i64 = 0;
	//for(= idx 0; != idx 8; = idx + idx 1)
	//{
	//	putchar('E');
	//}

	putchar(10);
}

morb : struct
{
	e : i64;
}

gamer : struct
{
	name: i8;
	age: i64;
	based : bool = true;
	m : morb;
}

== build ==
{
	= optimisation 0;
	= link "exe";
	= output "scratchpad.exe";
}

== build_library ==
{
	= optimisation 0;
	= link "lib";
	= output "scratchpad.lib";
}